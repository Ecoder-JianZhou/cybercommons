# this is for running TECO-SPRUCE and matrix-models
# local container provides the TECO-SPRUCE and 8 matrix models.

import os
import subprocess 
curPath = os.path.dirname(__file__)

def run_TECO_SPRUCE():
    # use the old way to call TECO-SPRUCE model:
    # % Option 0 and option 1 have same argument:
    # ./TECO.out input/SPRUCE_pars.txt input/SPRUCE_forcing.txt input/SPRUCE_obs.txt output/ 0 input/SPRUCE_da_pars.txt
    # % Option 2:
    # ./TECO.out input/SPRUCE_pars.txt input/SPRUCE_forcing.txt input/SPRUCE_obs.txt output/ 2 input/SPRUCE_da_pars.txt input/Weathergenerate 2024 365 2.25 380.0

    # % 1st argument is parameter file generated from portal
    # % 2nd argument is historical forcing file from SPRUCE site
    # % 3rd argument is observation file, data complied manually or will be partially automated 
    # % 4th argument is output folder
    # % 5th argument is 0, 1 and 2 to run simulation, data assimilation or forecasting, respectively
    # % 6th argument is DA checkbox file generated from portal, users can choose what parameters to do DA
    # % 7th argument is the future forcing files, pre-generated by stochastic model
    # % 8th argument is the year users want to forecast (maximum 2024)
    # % 9th argument is the day of the year users want to forecast
    # % 10th argument is temperature treatment (default 0.0, allow users to add 0~9 celsius degree)
    # % 11th argument is CO2 treatment (default ambient atmosphere 380.0ppm, allow users to type 380~900ppm)
    # (status, output) = commands.getstatusoutput('sh hello.sh')
    (status, output) = subprocess.run("./teco_spruce/run")
    # print("")
    print(output, status)

def run_matrix_model():
    pass

def readYml(ymlName):
    import yaml
    from yaml.loader import SafeLoader
    # Open the file and load the file
    with open(ymlName) as f:
        data = yaml.load(f, Loader=SafeLoader)
    return data

def main_run(settingFile=None):
    # read setting.yml file
    if settingFile is None:
        dictSettings = readYml(curPath+"/default_setting.yml")
    else:
        dictSettings = readYml(settingFile)

run_TECO_SPRUCE()